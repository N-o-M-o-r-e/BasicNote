// Generated by view binder compiler. Do not edit!
package com.sntthanh.notebasic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.sntthanh.notebasic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNotesBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Chip Archived;

  @NonNull
  public final ChipGroup ChipGroup;

  @NonNull
  public final Chip Deleted;

  @NonNull
  public final ImageView ImageView;

  @NonNull
  public final Chip Notes;

  @NonNull
  public final RecyclerView RecyclerView;

  private FragmentNotesBinding(@NonNull RelativeLayout rootView, @NonNull Chip Archived,
      @NonNull ChipGroup ChipGroup, @NonNull Chip Deleted, @NonNull ImageView ImageView,
      @NonNull Chip Notes, @NonNull RecyclerView RecyclerView) {
    this.rootView = rootView;
    this.Archived = Archived;
    this.ChipGroup = ChipGroup;
    this.Deleted = Deleted;
    this.ImageView = ImageView;
    this.Notes = Notes;
    this.RecyclerView = RecyclerView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNotesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNotesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_notes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNotesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Archived;
      Chip Archived = ViewBindings.findChildViewById(rootView, id);
      if (Archived == null) {
        break missingId;
      }

      id = R.id.ChipGroup;
      ChipGroup ChipGroup = ViewBindings.findChildViewById(rootView, id);
      if (ChipGroup == null) {
        break missingId;
      }

      id = R.id.Deleted;
      Chip Deleted = ViewBindings.findChildViewById(rootView, id);
      if (Deleted == null) {
        break missingId;
      }

      id = R.id.ImageView;
      ImageView ImageView = ViewBindings.findChildViewById(rootView, id);
      if (ImageView == null) {
        break missingId;
      }

      id = R.id.Notes;
      Chip Notes = ViewBindings.findChildViewById(rootView, id);
      if (Notes == null) {
        break missingId;
      }

      id = R.id.RecyclerView;
      RecyclerView RecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (RecyclerView == null) {
        break missingId;
      }

      return new FragmentNotesBinding((RelativeLayout) rootView, Archived, ChipGroup, Deleted,
          ImageView, Notes, RecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

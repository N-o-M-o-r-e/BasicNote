// Generated by view binder compiler. Do not edit!
package com.sntthanh.notebasic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.navigation.NavigationView;
import com.sntthanh.notebasic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final DrawerLayout DrawerLayout;

  @NonNull
  public final EditText EnterSearchKeyword;

  @NonNull
  public final FloatingActionButton MakeList;

  @NonNull
  public final FragmentContainerView NavHostFragment;

  @NonNull
  public final NavigationView NavigationView;

  @NonNull
  public final FloatingActionButton TakeNote;

  @NonNull
  public final MaterialToolbar Toolbar;

  private ActivityMainBinding(@NonNull DrawerLayout rootView, @NonNull DrawerLayout DrawerLayout,
      @NonNull EditText EnterSearchKeyword, @NonNull FloatingActionButton MakeList,
      @NonNull FragmentContainerView NavHostFragment, @NonNull NavigationView NavigationView,
      @NonNull FloatingActionButton TakeNote, @NonNull MaterialToolbar Toolbar) {
    this.rootView = rootView;
    this.DrawerLayout = DrawerLayout;
    this.EnterSearchKeyword = EnterSearchKeyword;
    this.MakeList = MakeList;
    this.NavHostFragment = NavHostFragment;
    this.NavigationView = NavigationView;
    this.TakeNote = TakeNote;
    this.Toolbar = Toolbar;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      DrawerLayout DrawerLayout = (DrawerLayout) rootView;

      id = R.id.EnterSearchKeyword;
      EditText EnterSearchKeyword = ViewBindings.findChildViewById(rootView, id);
      if (EnterSearchKeyword == null) {
        break missingId;
      }

      id = R.id.MakeList;
      FloatingActionButton MakeList = ViewBindings.findChildViewById(rootView, id);
      if (MakeList == null) {
        break missingId;
      }

      id = R.id.NavHostFragment;
      FragmentContainerView NavHostFragment = ViewBindings.findChildViewById(rootView, id);
      if (NavHostFragment == null) {
        break missingId;
      }

      id = R.id.NavigationView;
      NavigationView NavigationView = ViewBindings.findChildViewById(rootView, id);
      if (NavigationView == null) {
        break missingId;
      }

      id = R.id.TakeNote;
      FloatingActionButton TakeNote = ViewBindings.findChildViewById(rootView, id);
      if (TakeNote == null) {
        break missingId;
      }

      id = R.id.Toolbar;
      MaterialToolbar Toolbar = ViewBindings.findChildViewById(rootView, id);
      if (Toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((DrawerLayout) rootView, DrawerLayout, EnterSearchKeyword,
          MakeList, NavHostFragment, NavigationView, TakeNote, Toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
